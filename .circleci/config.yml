version: 2.1

# Environment Variables
# CLOUDSDK_CORE_PROJECT
# GOOGLE_APPLICATION_CREDENTIALS

commands:
  # ********************** terraform plan **************************************
  terraform_init_plan_apply:
    description: 'Plan Terraform deployment'
    parameters:
      env:
        type: string
    steps:
      - run:
          name: Terraform Init and Plan
          command: |
            cd terraform/environments/<< parameters.env >>
            terraform init -input=false
            terraform plan -out=tfplan
          environment:
            GOOGLE_APPLICATION_CREDENTIALS: /root/.gcp/credentials.json
      - persist_to_workspace:
          root: .
          paths:
            - .

  # ********************** terraform apply **************************************
  terraform_apply:
    description: 'Apply Terraform deployment'
    parameters:
      env:
        type: string
    steps:
      - run:
          name: Terraform Apply
          command: |
            cd terraform/environments/<< parameters.env >>
            terraform apply -auto-approve tfplan
          environment:
            GOOGLE_APPLICATION_CREDENTIALS: /root/.gcp/credentials.json
      - run:
          name: Retrieve Instance ID
          command: |
            terraform refresh
            INSTANCE_ID=$(terraform output -raw instance_id)
            echo "The instance ID is: $INSTANCE_ID"

  # ********************** gcloud builds **************************************
  gcloud_builds:
    description: 'Build and push Strapi to Cloud Artifact Registry'
    parameters:
      env:
        type: string
    steps:
      - run:
          name: Build and push Strapi to Cloud Artifact Registry
          command: |
            cd strapi-server
            gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

            echo "node_modules" > .gcloudignore
            echo ".git" >> .gcloudignore
            echo ".env*" >> .gcloudignore

            gcloud builds submit \
              --tag us-central1-docker.pkg.dev/$CLOUDSDK_CORE_PROJECT/strapi-docker-repo/strapi-image-local:latest \
              --gcs-log-dir=gs://cloud-build-logs-$CLOUDSDK_CORE_PROJECT/logs
          environment:
            GOOGLE_APPLICATION_CREDENTIALS: ${HOME}/.gcp/credentials.json

  # ********************** gcloud run deploy **************************************
  gcloud_run_deploy:
    description: 'Deploy Strapi to Cloud Run'
    parameters:
      env:
        type: string
    steps:
      - run:
          name: Deploy Strapi to Cloud Run
          command: |
            chmod +x ./scripts/deploy_run.sh
            ./scripts/deploy_run.sh
          environment:
            GOOGLE_APPLICATION_CREDENTIALS: ${HOME}/.gcp/credentials.json

jobs:
  deploy_strapi_in_staging:
    docker:
      - image: cimg/gcp:2025.01
    steps:
      - checkout
      - run: gcloud --version
      - run:
          name: Setup GCP Authentication
          command: |
            mkdir -p ${HOME}/.gcp
            echo $GOOGLE_APPLICATION_CREDENTIALS > ${HOME}/.gcp/credentials.json
            gcloud auth activate-service-account --key-file=${HOME}/.gcp/credentials.json
            gcloud config set project $CLOUDSDK_CORE_PROJECT
      - gcloud_builds:
          env: staging
      - gcloud_run_deploy:
          env: staging

  deploy_staging_terraform_apply:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: Setup GCP Credentials
          command: |
            mkdir -p /root/.gcp
            echo $GOOGLE_APPLICATION_CREDENTIALS > /root/.gcp/credentials.json
      - terraform_init_plan_apply:
          env: staging # terraform/environments/staging
      - terraform_apply:
          env: staging # terraform/environments/staging

workflows:
  strapi_deploy:
    jobs:
      - start_strapi_in_staging:
          type: approval
          filters:
            branches:
              only:
                - strapi-staging
      - deploy_strapi_in_staging:
          # requires:
          #   - start_strapi_in_staging
          filters:
            branches:
              only:
                - strapi-staging

  terraform_deploy:
    jobs:
      - start_staging_terraform:
          type: approval
          filters:
            branches:
              only:
                - terraform-staging
      - deploy_staging_terraform_apply:
          requires:
            - start_staging_terraform
          filters:
            branches:
              only:
                - terraform-staging
